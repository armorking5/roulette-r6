@page "/"
@inject ILogger<Operators> Logger
@inject HttpClient Http

<PageTitle>Randomizer R6</PageTitle>

<h1 class="justify-center text-center py-4">
	R6 Randomizer
</h1>

<p class="text-center justify-center font-bold">
	Randomize your pick of operators!
</p>

@if (operators == null)
{
	<p><em>Loading...</em></p>
}
else
{


	<EditForm Model="searchObj" OnSubmit="Submit" FormName="Starship1">
		<div>
			<label>
				Side:
				<InputSelect id="side" @bind-Value="searchObj.side">
					<option value="@Classes.OperatorSideEnum.Defense">Defense</option>
					<option value="@Classes.OperatorSideEnum.Attack">Attack</option>
				</InputSelect>
			</label>
		</div>
		<div>
			<button type="submit">Submit</button>
		</div>
	</EditForm>

	<table class="table">
		<thead>
			<tr>
				<th>Image</th>
				<th>Name</th>
				<th>Side</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var op in operators)
			{
				<tr>
					<td><img src="@op.Icon_Url" asp-append-version="true" alt="@op.Safename"></td>
					<td>@op.Name</td>
					<td>@op.Side</td>
				</tr>
			}
		</tbody>
	</table>
}

@code {
	[SupplyParameterFromForm]
	public Classes.SearchOperator searchObj { get; set; } = new Classes.SearchOperator();

	private Classes.Operator[]? operators;
	private void Submit()
	{
		Logger.LogInformation("Side = {Side}", searchObj.side);
	}

	protected override async Task OnInitializedAsync()
	{
		operators = await Http.GetFromJsonAsync<Classes.Operator[]>("data/ops.json");
	}
}
